@model TwolipsDating.ViewModels.ConversationViewModel
@using TwolipsDating.ViewModels
@using PagedList.Mvc;

@{
    ViewBag.Title = "Your conversations";
    ViewBag.Description = "twolips dating is a community focused on providing people with the ability to meet likeminded friends and colleagues through a variety of activities and challenges.";
}

@if (Model.IsCurrentUserEmailConfirmed)
{
    <div class="row">
        @if (Model.ConversationMessages != null && Model.ConversationMessages.Count > 0)
        {
            <div class="col-md-4">
                <div class="panel panel-default">
                    <div class="panel-body">
                        @foreach (var conversation in Model.Conversations)
                        {
                            <div class="conversation-item">
                                <a href="@Url.Action("conversation", "message", new { id = conversation.TargetUserId })">
                                    @if (conversation.TargetUserId == Model.TargetUserId)
                                    {
                                        <div class="well well-sm overflow-ellipsis" style="border-color: #008CBA; background-color: #efefef; line-height: 15px">
                                            <div class="circular-image-wrapper pull-left" style="margin-right: 7px;">
                                                <img class="circular-image" src="@conversation.TargetProfileImagePath" />
                                            </div>
                                            <strong>@conversation.TargetName</strong>
                                            <br />
                                            <small style="color: #555">@conversation.TimeAgo</small>
                                            <br />
                                            <small>@conversation.MostRecentMessageBody</small>
                                        </div>
                                    }
                                    else if (conversation.MostRecentMessageSenderUserId != Model.CurrentUserId
                                    && conversation.MostRecentMessageStatusId == (int)TwolipsDating.Models.MessageStatusValue.Unread)
                                    {
                                        <div class="well well-sm overflow-ellipsis" style="border-color: #008cba; background-color: #efefef; line-height: 15px">
                                            <div class="circular-image-wrapper pull-left" style="margin-right: 7px;">
                                                <img class="circular-image" src="@conversation.TargetProfileImagePath" />
                                            </div>
                                            <strong>@conversation.TargetName</strong>
                                            <br />
                                            <small style="color: #555">@conversation.TimeAgo</small><i class="pull-right glyphicon glyphicon-envelope"></i>
                                            <br />
                                            <small>@conversation.MostRecentMessageBody</small>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="well well-sm overflow-ellipsis">
                                            <div class="circular-image-wrapper pull-left" style="margin-right: 7px; line-height: 15px">
                                                <img class="circular-image" src="@conversation.TargetProfileImagePath" />
                                            </div>
                                            <strong>@conversation.TargetName</strong>
                                            <br />
                                            <small style="color: #555">@conversation.TimeAgo</small>
                                            <br />
                                            <small>@conversation.MostRecentMessageBody</small>
                                        </div>
                                    }
                                </a>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="col-md-8">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <div class="conversation-header">
                            <div class="circular-image-wrapper">
                                <img class="circular-image" src="@Model.TargetProfileImagePath" />
                            </div>
                            <h4 style="margin-left: 3px; display: inline-block; vertical-align: top; margin-top: 6px; line-height: 20px">
                                <strong style="margin-left: 6px">@Html.ActionLink(Model.TargetUserName, "index", "profile", new { id = Model.TargetProfileId }, null)</strong>
                                <br />
                                <small>
                                    <i class="fa fa-user fa-fw fa-lg"></i>
                                    @Model.TargetUserAge &bull; @Model.TargetUserGender
                                </small>
                                <br />
                                <small>
                                    <i class="fa fa-map-marker fa-fw fa-lg"></i>
                                    @Model.TargetUserLocation
                                </small>
                            </h4>
                        </div>
                        @using (Html.BeginForm("send", "message", FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary()

                            <div class="form-group">
                                @Html.TextAreaFor(m => m.NewMessage, new { @class = "form-control" })
                            </div>
                            @Html.HiddenFor(m => m.TargetApplicationUserId)
                            <div class="form-group">
                                <button type="submit" class="btn btn-primary btn-xs pull-right">
                                    <i class="fa fa-send fa-lg"></i> Send
                                </button>
                            </div>
                        }
                    </div>
                </div>
                <div class="panel panel-default">
                    <div class="panel-body">
                        @for (int i = 0; i < Model.ConversationMessages.Count; i++)
                        {
                            var message = Model.ConversationMessages[i];
                            <div class="conversation-item" style="word-wrap: break-word">
                                <div class="circular-image-wrapper pull-left" style="margin-right: 7px;">
                                    <img class=" circular-image" src="@message.TargetProfileImagePath" />
                                </div>
                                <p>@message.MostRecentMessageBody</p>
                                <small class="conversation-item-time-ago">@message.TimeAgo</small>
                            </div>
                            if (i < Model.ConversationMessages.Count - 1)
                            {
                                <hr />
                            }
                        }
                    </div>
                </div>
                @if (Model.ConversationMessages.PageCount > 1)
                {
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @Html.PagedListPager(Model.ConversationMessages, page => Url.Action("conversation", new { id = Model.TargetApplicationUserId, page = page }))
                        </div>
                    </div>
                }
            </div>
        }
        else
        {
            <div class="col-md-12">
                <div class="panel panel-default">
                    <div class="panel-body">
                        <h4>You don't have any recent conversations. Go find someone new and message them!</h4>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <div class="row">
        <div class="col-md-8 col-md-offset-2">
            <div class="panel panel-default">
                <div class="panel-body">
                    <h4>Before you can participate in message conversations, you need to confirm your email address.</h4>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/message/conversation")
}