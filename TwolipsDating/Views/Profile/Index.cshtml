@model TwolipsDating.ViewModels.ProfileViewModel

@{
    string title = String.Empty;
    if (User.Identity.IsAuthenticated)
    {
        if (Model.IsCurrentUserEmailConfirmed && !String.IsNullOrEmpty(Model.UserName))
        {
            title = String.Format("{0}, {1}", Model.UserName, !String.IsNullOrEmpty(Model.SelectedTitle) ? Model.SelectedTitle : "Newbie");
        }
        else
        {
            title = "Your profile will be here soon";
        }
    }
    else
    {
        title = String.Format("{0}, {1}", Model.UserName, !String.IsNullOrEmpty(Model.SelectedTitle) ? Model.SelectedTitle : "Newbie");
    }

    ViewBag.Title = title;
    ViewBag.ImageUrl = Model.ProfileImagePath;
    ViewBag.Description = String.Format("Profile for {0}, {1}", Model.UserName, Model.SelectedTitle);
}

@Html.HiddenFor(m => m.IsFavoritedByCurrentUser)
@Html.HiddenFor(m => m.IsIgnoredByCurrentUser)
@Html.HiddenFor(m => m.ActiveTab)
@Html.HiddenFor(m => m.ProfileId)
@Html.HiddenFor(m => m.ProfileUserId)

@if (Model != null && Model.ViewMode == TwolipsDating.ViewModels.ProfileViewModel.ProfileViewMode.ShowProfile)
{
    <div class="ad">
        <!-- Profile - Header - 1 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1823005717277864"
             data-ad-slot="8265412231"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
    if (Model.CurrentUserId == Model.ProfileUserId)
    {
        <div id="popover-titles-content" class="hide">
            <div class="custom-popover-content">
                @if (Model.UserTitles != null && Model.UserTitles.Count > 0)
                {
                    foreach (var userTitle in Model.UserTitles)
                    {
                        <p>
                            @if (userTitle.TitleName == Model.SelectedTitle)
                            {
                                <i class="@String.Format("selected-title-item-check-{0}", userTitle.TitleId) glyphicon glyphicon-ok"></i>
                            }
                            <a class="@String.Format("select-title-link-{0}", userTitle.TitleId)" href="#" data-title-name="@userTitle.TitleName" data-title-id="@userTitle.TitleId">@userTitle.TitleName</a>
                        </p>
                    }
                }
            </div>
        </div>
    }
    if (Model.WriteReviewViolation != null && Model.WriteReviewViolation.ViolationTypes != null && Model.WriteReviewViolation.ViolationTypes.Count > 0)
    {
        <div class="modal fade" id="modalReviewViolation" tabindex="-1" role="dialog" aria-labelledby="modalReviewViolationLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="modalReviewLabel">Submit violation for review</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="review-author-name" class="control-label">Review Author:</label>
                            <p id="review-author-name"></p>
                            <input type="hidden" id="review-id" />
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.WriteReviewViolation.ViolationTypeId, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.WriteReviewViolation.ViolationTypeId,
                        new SelectList(Model.WriteReviewViolation.ViolationTypes, "Key", "Value"),
                        new { @class = "form-control", data_placeholder = "What's the problem?" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "form-control" })
                        </div>
                        <div id="violation-error" class="alert alert-danger" role="alert">
                            <p id="violation-error-text">Something happened which prevented your violation from being submitted.</p>
                        </div>
                        <div id="violation-success" class="alert alert-success" role="alert">
                            <p>Thanks for the report! You can close this popup now.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="button-violation-close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="button-violation-submit" onclick="onAddReviewViolation(event, this)" type="button" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="modal fade" id="modalGift" tabindex="-1" role="dialog" aria-labelledby="modalGiftLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalReviewLabel">Send gifts to <strong>@Model.UserName</strong></h4>
                </div>
                @if (Model.ViewerInventoryItems != null && Model.ViewerInventoryItems.Count > 0)
                {
                    <div class="modal-body">
                        <div class="form-group">
                            <div class="row">
                                @foreach (var item in Model.ViewerInventoryItems)
                                {
                                    <div id="@String.Format("gift-image-wrapper-{0}", item.GiftId)" class="col-xs-3 col-md-2 text-center">
                                        <a id="@item.InventoryItemId" data-gift-name="@item.GiftName" data-gift-id="@item.GiftId" href="#" onclick="onSelectGiftClick(event, this)">
                                            <img src="@item.GiftIconFilePath">
                                        </a>
                                        <p id="@String.Format("gift-count-{0}", item.InventoryItemId)" class="bg-info">@item.ItemCount</p>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="pull-right">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button id="button-gift-send" type="button" class="btn btn-primary" onclick="onSendGift(event, this)">Send</button>
                        </div>
                        <div class="clearfix"></div>
                        <br />
                        <div id="gift-error" class="alert alert-danger" role="alert">
                            <p id="gift-error-text">Something happened which prevented your gift from being sent.</p>
                        </div>
                        <div id="gift-success" class="alert alert-success" role="alert">
                            <p>Gift sent successfully.</p>
                        </div>
                        <table id="gift-send-log" class="table">
                            <thead>
                                <tr>
                                    <th>Gifts successfully sent so far:</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        @Html.HiddenFor(m => m.SendGift.GiftId)
                        @Html.HiddenFor(m => m.SendGift.InventoryItemId)
                        <input type="hidden" id="selected-gift-name" />
                    </div>
                }
                else
                {
                    <div class="modal-body">
                        <p>You don't have any items to send. Go get some and come back!</p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalReview" tabindex="-1" role="dialog" aria-labelledby="modalReviewLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalReviewLabel">New review for <strong>@Model.UserName</strong></h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.LabelFor(m => m.WriteReview.RatingValue, new { @class = "control-label" })
                        <div id="star"></div> <small>(hover and select star)</small>
                    </div>
                    <div class="form-group">
                        @Html.TextAreaFor(m => m.WriteReview.ReviewContent, new { @class = "form-control" })
                    </div>
                    <div id="review-error" class="alert alert-danger" role="alert">
                        <p id="review-error-text">Something happened which prevented your review from being submitted.</p>
                    </div>
                    <div id="review-success" class="alert alert-success" role="alert">
                        <p>Review submitted successfully. @Html.ActionLink("View reviews", "index", "profile", new { id = Model.ProfileId, tab = Model.ActiveTab }, new { @class = "alert-link" }) for <strong>@Model.UserName</strong>.</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="button-review-write" type="button" class="btn btn-primary" onclick="onWriteReview(event, this)">Submit review</button>
                </div>
                @Html.HiddenFor(m => m.WriteReview.RatingValue)
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalMessage" tabindex="-1" role="dialog" aria-labelledby="modalMessageLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalMessageLabel">Send messages to <strong>@Model.UserName</strong></h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.TextAreaFor(m => m.SendMessage.MessageBody, new { @class = "form-control" })
                    </div>
                    <div id="message-error" class="alert alert-danger" role="alert">
                        <p id="message-error-text">Something happened which prevented your message from being sent.</p>
                    </div>
                    <div class="pull-right">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="button-message-send" type="button" onclick="onSendMessage(event, this)" class="btn btn-primary">Send</button>
                    </div>
                    <div class="clearfix"></div>
                    <br />
                    <div id="message-success" class="alert alert-success" role="alert">
                        <p>Message sent successfully. @Html.ActionLink("View conversation", "conversation", "message", new { id = @Model.ProfileUserId }, new { @class = "alert-link" }) with <strong>@Model.UserName</strong>.</p>
                    </div>
                    <table id="message-send-log" class="table wrap-long-lines-table">
                        <thead>
                            <tr>
                                <th>Messages successfully sent so far:</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    if (Model.ActiveTab == "pictures" || Model.CurrentUserId == Model.ProfileUserId)
    {
        <div class="modal fade" id="modalProfileImage" tabindex="-1" role="dialog" aria-labelledby="modalProfileImageLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="modalProfileImageLabel">Select your profile image</h4>
                    </div>
                    @if (Model.UploadImage.UserImages.Count > 0)
                    {
                        using (Html.BeginForm("changeimage", "profile", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary()
                            <div class="modal-body">
                                <div class="row">
                                    @foreach (var userImage in Model.UploadImage.UserImages)
                                    {
                                        <div class="col-xs-6 col-md-3">
                                            <a id="@userImage.Id" href="#" class="thumbnail" onclick="onSelectProfileImageClick(event, this)">
                                                <img src="@userImage.Path" style="max-height: 128px;">
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                            @Html.HiddenFor(m => m.ChangeImage.UserImageId)
                            @Html.HiddenFor(m => m.ProfileUserId)
                            @Html.HiddenFor(m => m.ProfileId)
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                <button type="submit" class="btn btn-primary">OK</button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="modal-body">
                            <h4>You can't change your profile image because you haven't uploaded any images.</h4>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">OK</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    <div class="modal fade" id="modalSuggestTags" tabindex="-1" role="dialog" aria-labelledby="modalSuggestTagsLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalSuggestTagsLabel">Managing tag suggestions</h4>
                </div>
                @using (Html.BeginForm("sendmessage", "profile", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="modal-body">
                        <div class="tags">
                            @foreach (var tag in Model.AllTags)
                            {
                                if (tag.DidUserSuggest)
                                {
                                    <a href="#" id="@String.Format("{0}-tag-button", tag.TagId)" onclick="onSuggestTag(event, this, @tag.TagId)" class="custom-tooltip btn btn-primary btn-xs" title="@tag.TagDescription">
                                        <span id="@String.Format("{0}-tag-count", tag.TagId)" class="badge">@tag.TagCount</span> @tag.TagName
                                    </a>
                                    <a href="#" onclick="onSuggestTag(event, this, @tag.TagId)"><i id="@String.Format("{0}-tag-glyph", tag.TagId)" class="glyphicon glyphicon-minus"></i></a>
                                }
                                else
                                {
                                    <a href="#" id="@String.Format("{0}-tag-button", tag.TagId)" onclick="onSuggestTag(event, this, @tag.TagId)" class="custom-tooltip btn btn-default btn-xs" title="@tag.TagDescription">
                                        <span id="@String.Format("{0}-tag-count", tag.TagId)" class="badge">@tag.TagCount</span> @tag.TagName
                                    </a>
                                    <a href="#" onclick="onSuggestTag(event, this, @tag.TagId)"><i id="@String.Format("{0}-tag-glyph", tag.TagId)" class="glyphicon glyphicon-plus"></i></a>
                                }
                                <input id="@String.Format("{0}-tag-hidden", tag.TagId)" type="hidden" value="@tag.DidUserSuggest.ToString().ToLower()" />
                                @:&nbsp;
                                @:&nbsp;
                            }
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-12">
            <div class="panel panel-default">
                <div class="panel-body text-center-xs">
                    <div class="col-sm-3 col-md-2">
                        @if (User.Identity.IsAuthenticated && Model.CurrentUserId == Model.ProfileUserId)
                        {
                            <a href="#" data-toggle="modal" data-target="#modalProfileImage" data-keyboard="true" title="Change your profile image">
                                @if (!String.IsNullOrEmpty(Model.ProfileImagePath))
                                {
                                    <img src="@Model.ProfileImagePath" style="max-height: 128px">
                                }
                                else
                                {
                                    <img src="~/Content/Placeholder.png">
                                }
                            </a>
                        }
                        else
                        {
                            if (!String.IsNullOrEmpty(Model.ProfileImagePath))
                            {
                                <img src="@Model.ProfileImagePath" style="max-height: 128px">
                            }
                            else
                            {
                                <img src="~/Content/Placeholder.png">
                            }
                        }
                    </div>
                    <div class="col-sm-7 col-md-8 profile-banner-info" style="">
                        <p class="user-name">
                            @Model.UserName
                        </p>
                        <p class="rating">
                            @for (int i = 1; i <= Model.AverageRatingValue; i++)
                            {
                                <i class="glyphicon glyphicon-star" style="color: #D08002"></i>
                            }
                            @for (int j = 1; j <= 5 - Model.AverageRatingValue; j++)
                            {
                                <i class="glyphicon glyphicon-star-empty" style="color: #D08002"></i>
                            }
                            <small>@Model.ReviewCount @(Model.ReviewCount == 1 ? "review" : "reviews")</small>
                        </p>
                        <p class="user-info">
                            <i class="glyphicon glyphicon-user"></i>
                            @Model.Age &bull; @Model.Gender
                        </p>
                        <p class="user-location">
                            @if (!String.IsNullOrEmpty(Model.Location))
                            {
                                <i class="glyphicon glyphicon-map-marker"></i>
                                @Model.Location
                            }
                        </p>
                        <p class="user-title">
                            <a id="selected-title" href="#" class="label label-success"
                               data-title="Select your title" data-container="body" data-toggle="popover" data-placement="bottom"
                               data-animation="false">
                                @if (!String.IsNullOrEmpty(Model.SelectedTitle))
                                {
                                    @Model.SelectedTitle
                                }
                                else
                                {
                                    @:Newbie
                            }
                            </a>
                        </p>
                    </div>

                    @if (Model.ProfileUserId != Model.CurrentUserId && Model.IsCurrentUserEmailConfirmed)
                    {
                        <div class="col-sm-2">
                            <div class="hidden-xs text-right" style="margin-top: 10px">
                                <div class="btn-group-vertical" role="group">
                                    <button type="button" class="button-toggle-favorite btn btn-default " title="Add to favorites" onclick="onToggleFavoriteProfile(event, this, '@Model.ProfileUserId', @Model.ProfileId)">
                                        <i class="button-toggle-favorite-icon glyphicon glyphicon-ok"></i> <span class="button-toggle-favorite-text">Following</span>
                                    </button>
                                    <button type="button" class="btn btn-default " data-toggle="modal" data-target="#modalMessage" data-keyboard="true" title="Send a message">
                                        <i class="glyphicon glyphicon-comment"></i> Message
                                    </button>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-default dropdown-toggle " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="glyphicon glyphicon-option-horizontal"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalGift" data-keyboard="true" title="Send a gift">
                                                    <i class="glyphicon glyphicon-gift"></i> Gift
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalReview" data-keyboard="true" title="Write a review">
                                                    <i class="glyphicon glyphicon-edit"></i> Review
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="button-toggle-ignored btn btn-default  btn-block" title="Receiving updates and messages from this user" onclick="onToggleIgnoredUser(event, this, '@Model.ProfileUserId')">
                                                    <i class="button-toggle-ignored-icon glyphicon glyphicon-volume-up"></i> <span class="button-toggle-ignored-text">Ignoring</span>
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block">
                                                    <i class="glyphicon glyphicon-flag"></i> Report
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                    @*
                                        <li role="presentation"><a href="#" title="Send a challenge"><i class="glyphicon glyphicon-tower"></i></a></li>
                                    *@
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            @if (!User.Identity.IsAuthenticated)
            {
                <div class="panel panel-warning hidden-md hidden-lg">
                    <div class="panel-body text-center">
                        <a class="btn btn-warning" href="@Url.Action("login", "account")">Login to contact this user</a>
                    </div>
                </div>
            }
            @if (User.Identity.IsAuthenticated)
            {
                if (Model.ProfileUserId != Model.CurrentUserId && Model.IsCurrentUserEmailConfirmed)
                {
                    <div class="visible-xs" style="display: inline-block; margin-bottom: 10px; margin-left: auto; margin-right: auto; width: 260px">
                        <div class="btn-group">
                            <button type="button" class="custom-tooltip button-toggle-favorite btn btn-primary" title="Add to favorites" onclick="onToggleFavoriteProfile(event, this, '@Model.ProfileUserId', @Model.ProfileId)">
                                <i class="button-toggle-favorite-icon glyphicon glyphicon-heart"></i> <span class="button-toggle-favorite-text">Following</span>
                            </button>
                            <button type="button" class="custom-tooltip btn btn-default" data-toggle="modal" data-target="#modalMessage" data-keyboard="true" title="Send a message">
                                <i class="glyphicon glyphicon-comment"></i> Message
                            </button>
                            <div class="btn-group" role="group">
                                <button type="button" class="btn btn-default dropdown-toggle " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                    <i class="glyphicon glyphicon-option-vertical"></i>
                                </button>
                                <ul class="dropdown-menu dropdown-menu-right">
                                    <li>
                                        <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalGift" data-keyboard="true" title="Send a gift">
                                            <i class="glyphicon glyphicon-gift"></i> Gift
                                        </button>
                                    </li>
                                    <li>
                                        <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalReview" data-keyboard="true" title="Write a review">
                                            <i class="glyphicon glyphicon-edit"></i> Review
                                        </button>
                                    </li>
                                    <li>
                                        <button type="button" class="button-toggle-ignored btn btn-default  btn-block" title="Receiving updates and messages from this user" onclick="onToggleIgnoredUser(event, this, '@Model.ProfileUserId')">
                                            <i class="button-toggle-ignored-icon glyphicon glyphicon-volume-up"></i> <span class="button-toggle-ignored-text">Ignoring</span>
                                        </button>
                                    </li>
                                    <li>
                                        <button type="button" class="btn btn-default  btn-block">
                                            <i class="glyphicon glyphicon-flag"></i> Report
                                        </button>
                                    </li>
                                </ul>
                            </div>
                            @*
                                <li role="presentation"><a href="#" title="Send a challenge"><i class="glyphicon glyphicon-tower"></i></a></li>
                            *@
                        </div>
                    </div>
                }
            }
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <i class="glyphicon glyphicon-tags"></i>&nbsp;&nbsp;Awarded tags
                        <small><i class="custom-tooltip glyphicon glyphicon-info-sign" title="Tags that have been awarded to the user based on community activities"></i></small>
                    </h4>
                </div>
                <div class="panel-body">
                    @if (Model.AwardedTags != null && Model.AwardedTags.Count > 0)
                    {
                        if (Model.AwardedTags != null && Model.AwardedTags.Count > 0)
                        {
                            <div class="tags">
                                @foreach (var tag in Model.AwardedTags)
                                {
                                    <a href="@Url.Action("tag", "search", new { tag = tag.TagName })" class="custom-tooltip btn btn-default btn-xs" title="@tag.TagDescription">
                                        <span class="badge">@tag.TagCount</span> @tag.TagName
                                    </a>
                                }
                            </div>
                        }
                    }
                    else
                    {
                        if (Model.CurrentUserId == Model.ProfileUserId)
                        {
                            <p>You don't have any awarded tags yet. Go to the trivia section!</p>
                        }
                        else
                        {
                            <p>This user doesn't have any awarded tags yet. Encourage them to answer some trivia!</p>
                        }
                    }
                </div>
            </div>
            <div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <i class="glyphicon glyphicon-tags"></i>&nbsp;&nbsp;Suggested tags
                        <small><i class="custom-tooltip glyphicon glyphicon-info-sign" title="Tags that have been suggested by other users based on their perception"></i></small>
                    </h4>
                </div>
                <div class="panel-body">
                    @if (User.Identity.IsAuthenticated && Model.ProfileUserId != Model.CurrentUserId && Model.IsCurrentUserEmailConfirmed)
                    {
                        <a href="#" style="margin-bottom: 5px" class="btn btn-xs btn-default custom-tooltip" title="Suggest tags to be displayed on this profile"
                           data-toggle="modal" data-target="#modalSuggestTags" data-keyboard="true">
                            <i class="glyphicon glyphicon-tag"></i> Add &amp; Remove
                        </a>
                    }
                    @if (Model.SuggestedTags != null && Model.SuggestedTags.Count > 0)
                    {
                        <ul class="list-unstyled">
                            @foreach (var tag in Model.SuggestedTags)
                            {
                                <li class="profile-tag-suggestion-list-item">
                                    @if (tag.DidUserSuggest)
                                    {
                                        <a href="@Url.Action("tag", "search", new { tag = tag.TagName })" class="profile-tag pull-left custom-tooltip btn btn-primary btn-xs" title="@tag.TagDescription">
                                            <span class="badge">@tag.TagCount</span> @tag.TagName
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="@Url.Action("tag", "search", new { tag = tag.TagName })" class="profile-tag pull-left custom-tooltip btn btn-default btn-xs" title="@tag.TagDescription">
                                            <span class="badge">@tag.TagCount</span> @tag.TagName
                                        </a>
                                    }
                                    <div class="suggesting-users">
                                        <span class="pull-right user-images">
                                            @foreach (var user in tag.SuggestionUsers)
                                            {
                                                <a class="pull-left user-image custom-tooltip" title="@user.UserName" href="@Url.Action("index", "profile", new { id = user.UserProfileId })">
                                                    <img src="@user.UserProfileImagePath" width="24" height="24" />
                                                </a>
                                            }
                                            <small><a href="#"><i class="glyphicon glyphicon-triangle-right"></i></a></small>
                                        </span>
                                        <div class="separator"></div>
                                    </div>
                                    <div class="clearfix"></div>
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        if (Model.CurrentUserId == Model.ProfileUserId)
                        {
                            <p>You don't have any tags yet. Ask people to suggest some!</p>
                        }
                        else
                        {
                            <p>This user doesn't have any tags yet. Suggest some!</p>
                        }
                    }
                    @*
                        <h4><i class="glyphicon glyphicon-book"></i>&nbsp;&nbsp;Badges earned</h4>
                        <span class="label label-danger"><i class="glyphicon glyphicon-apple"></i></span>
                        <span class="label label-success"><i class="glyphicon glyphicon-music"></i></span>
                        <span class="label label-info"><i class="glyphicon glyphicon-knight"></i></span>
                        <span class="label label-info"><i class="glyphicon glyphicon-king"></i></span>
                        <span class="label label-warning"><i class="glyphicon glyphicon-baby-formula"></i></span>
                    *@
                </div>

            </div>
        </div>
        <div class="col-md-8">
            @if (User.Identity.IsAuthenticated)
            {

            }
            else
            {
                <div class="panel panel-warning hidden-xs hidden-sm">
                    <div class="panel-body text-center">
                        <a class="btn btn-warning" href="@Url.Action("login", "account")">Login to contact this user</a>
                    </div>
                </div>
            }
            <div class="panel panel-default">
                <div class="panel-body">
                    <ul class="nav nav-pills">
                        @if (Model.ActiveTab == "feed")
                        {
                            <li role="presentation" class="active">
                                <a href="@Url.Action("index", new { tab = "feed" })"><i class="glyphicon glyphicon-list-alt"></i>&nbsp; Feed</a>
                            </li>
                        }
                        else
                        {
                            <li role="presentation">
                                <a href="@Url.Action("index", new { tab = "feed" })"><i class="glyphicon glyphicon-list-alt"></i>&nbsp; Feed</a>
                            </li>
                        }
                        @if (Model.ActiveTab == "pictures")
                        {
                            <li role="presentation" class="active">
                                <a href="@Url.Action("index", new { tab = "pictures" })"><i class="glyphicon glyphicon-picture"></i>&nbsp; Pictures</a>
                            </li>
                        }
                        else
                        {
                            <li role="presentation">
                                <a href="@Url.Action("index", new { tab = "pictures" })"><i class="glyphicon glyphicon-picture"></i>&nbsp; Pictures</a>
                            </li>
                        }
                        @if (Model.ActiveTab == "reviews")
                        {
                            <li role="presentation" class="active">
                                <a href="@Url.Action("index", new { tab = "reviews" })"><i class="glyphicon glyphicon-duplicate"></i>&nbsp; Reviews</a>
                            </li>
                        }
                        else
                        {
                            <li role="presentation">
                                <a href="@Url.Action("index", new { tab = "reviews" })"><i class="glyphicon glyphicon-duplicate"></i>&nbsp; Reviews</a>
                            </li>
                        }
                        @if (Model.ActiveTab == "inventory")
                        {
                            <li role="presentation" class="active">
                                <a href="@Url.Action("index", new { tab = "inventory" })"><i class="glyphicon glyphicon-gift"></i>&nbsp; Inventory</a>
                            </li>
                        }
                        else
                        {
                            <li role="presentation">
                                <a href="@Url.Action("index", new { tab = "inventory" })"><i class="glyphicon glyphicon-gift"></i>&nbsp; Inventory</a>
                            </li>
                        }
                        @*
                            <li role="presentation"><a href="#">Achievements</a></li>
                            <li role="presentation"><a href="#">Stats</a></li>
                            <li role="presentation"><a href="#">Trophy Room</a></li>
                        *@
                    </ul>
                    <hr />
                    @if (Model.ActiveTab == "feed")
                    {
                        Html.RenderPartial("_FeedPartial", Model.Feed);
                    }
                    else if (Model.ActiveTab == "pictures")
                    {
                        Html.RenderPartial("_PicturesPartial", Model.UploadImage);
                    }
                    else if (Model.ActiveTab == "reviews")
                    {
                        Html.RenderPartial("_ReviewsPartial", Model.Reviews);
                    }
                    else if (Model.ActiveTab == "inventory")
                    {
                        Html.RenderPartial("_InventoryPartial", Model.Inventory);
                    }
                </div>
            </div>
        </div>
    </div>
}
else if (Model.ViewMode == TwolipsDating.ViewModels.ProfileViewModel.ProfileViewMode.CreateProfile)
{
    <div class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-body">
                    @if (Model.IsCurrentUserEmailConfirmed)
                    {
                        <div class="text-center">
                            <h2>Your profile will be here soon</h2>
                            <h4>Fill out some info below to finalize it</h4>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-md-4 col-md-offset-4">
                                @using (Html.BeginForm("create", "profile", FormMethod.Post, new { role = "form" }))
                                {
                                    @Html.AntiForgeryToken()
                                    @Html.ValidationSummary()

                                    <p class="control-label">What are you?</p>
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            @Html.DropDownListFor(m => m.CreateProfile.SelectedGenderId,
                            new SelectList(Model.CreateProfile.Genders, "Key", "Value"),
                            new { @class = "form-control", data_placeholder = "What are you?" })
                                        </div>
                                    </div>
                                    <p class="control-label">What city do you live in?</p>
                                    <div class="col-xs-12">
                                        <div class="form-group">
                                            <input class="form-control" type="text" name="ff_nm_from[]" value="" id="f_elem_city" />
                                            @Html.HiddenFor(m => m.CreateProfile.SelectedLocation)
                                        </div>
                                    </div>
                                    <p class="control-label">When were you born?</p>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.CreateProfile.BirthMonth, new { @class = "form-control", @placeholder = "MM", maxlength = "2" })
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.CreateProfile.BirthDayOfMonth, new { @class = "form-control", @placeholder = "DD", maxlength = "2" })
                                        </div>
                                    </div>
                                    <div class="col-xs-4">
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.CreateProfile.BirthYear, new { @class = "form-control", @placeholder = "YYYY", maxlength = "4" })
                                        </div>
                                    </div>
                                    @*<div class="form-group">
                                                    <p class="control-label">Where are you?</p>
                                                    @Html.DropDownListFor(m => m.CreateProfile.SelectedCountryId,
                                        new SelectList(Model.CreateProfile.Countries, "Key", "Value"),
                                        new { @class = "form-control", data_placeholder = "What country are you in?", onchange = "onCountrySelected(event, this)" })
                                                </div>
                                                <div class="form-group">
                                                    <input type="text" id="textBoxZipCode" class="form-control" placeholder="Zip Code (ex. 33777)" onblur="onZipCodeBlur(event, this)" maxlength="5" />
                                                    @Html.HiddenFor(m => m.CreateProfile.SelectedZipCodeId)
                                                    <p id="zipCodeLocationText"></p>
                                                </div>
                                                <div class="form-group">
                                                    <input type="text" id="textBoxCity" class="form-control" placeholder="City (ex. London)" onblur="onCityBlur(event, this)" />
                                                    @Html.HiddenFor(m => m.CreateProfile.SelectedCityId)
                                                    <p id="cityLocationText"></p>
                                                </div>*@
                                    <div class="form-group">
                                        <button type="submit" class="btn btn-primary pull-right">OK</button>
                                    </div>
                                }
                            </div>
                        </div>
                    }
                    else
                    {
                        <h4>You need to confirm your email address before you can create your profile.</h4>
                    }
                </div>
            </div>
        </div>
    </div>
}
@if (Model != null && Model.ViewMode == TwolipsDating.ViewModels.ProfileViewModel.ProfileViewMode.ShowProfile)
{
    <div class="ad">
        <!-- Profile - Footer - 1 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1823005717277864"
             data-ad-slot="7642643435"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/Profile/index.js")" type="text/javascript"></script>
    <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
}
