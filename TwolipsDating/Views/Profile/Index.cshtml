@model TwolipsDating.ViewModels.ProfileViewModel
@using PagedList.Mvc;
@using Microsoft.AspNet.Identity;

@{
    string title = String.Empty;
    if (User.Identity.IsAuthenticated)
    {
        if (Model.IsCurrentUserEmailConfirmed && !String.IsNullOrEmpty(Model.UserName))
        {
            title = String.Format("Profile for {0} ({1})", Model.UserName, !String.IsNullOrEmpty(Model.SelectedTitle) ? Model.SelectedTitle : "Newbie");
        }
        else
        {
            title = "Your profile will be here soon";
        }
    }
    else
    {
        title = String.Format("Profile for {0} ({1})", Model.UserName, !String.IsNullOrEmpty(Model.SelectedTitle) ? Model.SelectedTitle : "Newbie");
    }

    ViewBag.Title = title;
    ViewBag.ImageUrl = Model.ProfileThumbnailImagePath;
    ViewBag.ImageWidth = "200";
    ViewBag.ImageHeight = "200";
    ViewBag.Description = String.Format("A {0} year old {1} from {2}. Sign up for free and message them to learn more.", Model.Age, Model.Gender, Model.Location);
    ViewBag.TwitterCardType = "summary";
}

@Html.HiddenFor(m => m.IsFavoritedByCurrentUser)
@Html.HiddenFor(m => m.IsIgnoredByCurrentUser)
@Html.HiddenFor(m => m.ActiveTab)
@Html.HiddenFor(m => m.ProfileId)
@Html.HiddenFor(m => m.ProfileUserId)

@if (!HttpContext.Current.IsDebuggingEnabled)
{
    <div class="ad">
        <!-- Profile - Header - 1 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1823005717277864"
             data-ad-slot="8265412231"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
}
else
{
    <div style="width: 610px; margin: 0 auto 10px">
        <img src="http://placehold.it/600x90" />
    </div>
}
@if (User.Identity.GetUserId() == Model.ProfileUserId)
{
    <div id="popover-titles-content" class="hide">
        <div class="custom-popover-content">
            @if (Model.UserTitles != null && Model.UserTitles.Count > 0)
            {
                foreach (var userTitle in Model.UserTitles)
                {
                    <p>
                        @if (userTitle.TitleName == Model.SelectedTitle)
                        {
                            <i class="@String.Format("selected-title-item-check-{0}", userTitle.TitleId) glyphicon glyphicon-ok"></i>
                        }
                        <a class="@String.Format("select-title-link-{0}", userTitle.TitleId)" href="#" data-title-name="@userTitle.TitleName" data-title-id="@userTitle.TitleId">@userTitle.TitleName</a>
                    </p>
                }
            }
        </div>
    </div>
}
<div class="row">
    <div class="col-xs-12">
        <div id="profile-banner-background" class="panel panel-default"
             style="@(!String.IsNullOrEmpty(Model.BannerImagePath) ? "background: url(" + Model.BannerImagePath + ") no-repeat; background-size: cover; background-position: " + String.Format("{0}px {1}px", Model.BannerPositionX, Model.BannerPositionY) : "background-color: #008CBA")">
            <div class="panel-body profile-banner">
                @if (User.Identity.GetUserId() == Model.ProfileUserId)
                {
                    <div style="position: absolute; left: 20px; top: 15px;" class="hidden-xs">
                        @using (Html.BeginForm("changebackgroundimage", "profile", FormMethod.Post, new { @id = "upload-header-form", enctype = "multipart/form-data" }))
                        {
                            @Html.HiddenFor(m => m.ProfileUserId)
                            <span class="btn btn-default btn-xs btn-file">
                                <i id="upload-header-spinner" class="hidden fa fa-cog fa-spin fa-lg fa-fw"></i>
                                <i id="upload-header-camera" class="fa fa-camera fa-lg fa-fw"></i>
                                Change banner
                                <input id="upload-header" name="upload-header" type="file" accept="image/jpeg,image/gif,image/bmp,image/png" />
                            </span>
                        }
                        <a id="reposition-header" href="#" style="margin-top: 5px;" class="btn btn-default btn-xs">
                            <i class="fa fa-hand-pointer-o fa-lg fa-fw"></i> Move banner
                        </a>
                    </div>

                    using (Html.BeginForm("savebackgroundimage", "profile", FormMethod.Post, new { @id = "save-header-form", }))
                    {
                        @Html.HiddenFor(m => m.ProfileUserId)
                        @Html.HiddenFor(m => m.BannerPositionX)
                        @Html.HiddenFor(m => m.BannerPositionY)

                        <button type="submit" id="save-header" href="#" class="hidden btn btn-primary btn-xs" style="position: absolute; bottom: 25px; left: 20px">
                            <i id="save-header-spinner" class="hidden fa fa-cog fa-spin fa-lg fa-fw"></i>
                            <i id="save-header-check" class="fa fa-check fa-lg fa-fw"></i>
                            Save header
                        </button>
                        <button type="button" id="cancel-header" href="#" class="hidden btn btn-default btn-xs" style="position: absolute; bottom: 25px; left: 130px">
                            Cancel
                        </button>
                    }
                }
                <div class="col-xs-12 col-sm-6 col-sm-offset-3 col-md-4 col-md-offset-4 text-center">
                    <div id="profile-card" class="panel panel-default text-center" style="background: rgba(255, 255, 255, 0.85) !important; margin-bottom: 0">
                        <div class="panel-body">
                            @if (User.Identity.IsAuthenticated && User.Identity.GetUserId() == Model.ProfileUserId)
                            {
                                <a href="#" data-toggle="modal" data-target="#modalProfileImage" data-keyboard="true" title="Change your profile image">
                                    <div class="circular-image-wrapper">
                                        <img class="circular-image" src="@Model.ProfileThumbnailImagePath" />
                                    </div>
                                </a>
                            }
                            else
                            {
                                <a href="@Model.ProfileImagePath" data-gallery>
                                    <div class="circular-image-wrapper">
                                        <img class="circular-image" src="@Model.ProfileThumbnailImagePath" />
                                    </div>
                                </a>
                            }
                            <div class="profile-banner-info">
                                <p class="user-name">
                                    @Model.UserName
                                </p>
                                <p class="rating">
                                    @for (int i = 1; i <= Model.AverageRatingValue; i++)
                                    {
                                        <i class="fa fa-star review-rating-color"></i>
                                    }
                                    @for (int j = 1; j <= 5 - Model.AverageRatingValue; j++)
                                    {
                                        <i class="fa fa-star-o review-rating-color"></i>
                                    }
                                    <small>@Model.ReviewCount @(Model.ReviewCount == 1 ? "review" : "reviews")</small>
                                </p>
                                <p class="user-info">
                                    <i class="fa fa-user fa-fw"></i>
                                    @Model.Age &bull; @Model.Gender
                                </p>
                                <p class="user-location">
                                    @if (!String.IsNullOrEmpty(Model.Location))
                                    {
                                        <i class="fa fa-map-marker fa-fw"></i>
                                        @Model.Location
                                    }
                                </p>
                                <p class="user-title">
                                    <a id="selected-title" href="#" class="label label-success"
                                       data-title="Select your title" data-container="body" data-toggle="popover" data-placement="bottom"
                                       data-animation="false">
                                        @if (!String.IsNullOrEmpty(Model.SelectedTitle))
                                        {
                                            @Model.SelectedTitle
                                        }
                                        else
                                        {
                                            @:Newbie
                            }
                                    </a>
                                </p>
                            </div>
                        </div>
                    </div>
                    @if (User.Identity.IsAuthenticated)
                    {
                        if (Model.ProfileUserId != User.Identity.GetUserId() && Model.IsCurrentUserEmailConfirmed)
                        {
                            <div style="margin-top: 10px; margin-left: auto; margin-right: auto; width: 260px">
                                <div class="btn-group">
                                    <button type="button" class="button-toggle-favorite btn btn-primary" title="Add to favorites" onclick="onToggleFavoriteProfile(event, this, '@Model.ProfileUserId', @Model.ProfileId)">
                                        <i class="button-toggle-favorite-icon fa fa-user-plus"></i> <span class="button-toggle-favorite-text">Following</span>
                                    </button>
                                    <button type="button" class="btn btn-default" data-toggle="modal" data-target="#modalMessage" data-keyboard="true" title="Send a message">
                                        <i class="glyphicon glyphicon-comment"></i> Message
                                    </button>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-default dropdown-toggle " data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="glyphicon glyphicon-option-vertical"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-right">
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalGift" data-keyboard="true" title="Send a gift">
                                                    <i class="glyphicon glyphicon-gift"></i> Gift
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block" data-toggle="modal" data-target="#modalReview" data-keyboard="true" title="Write a review">
                                                    <i class="fa fa-edit"></i> Review
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="button-toggle-ignored btn btn-default  btn-block" title="Receiving updates and messages from this user" onclick="onToggleIgnoredUser(event, this, '@Model.ProfileUserId')">
                                                    <i class="button-toggle-ignored-icon glyphicon glyphicon-volume-up"></i> <span class="button-toggle-ignored-text">Ignoring</span>
                                                </button>
                                            </li>
                                            <li>
                                                <button type="button" class="btn btn-default  btn-block">
                                                    <i class="glyphicon glyphicon-flag"></i> Report
                                                </button>
                                            </li>
                                        </ul>
                                    </div>
                                    @*
                                        <li role="presentation"><a href="#" title="Send a challenge"><i class="glyphicon glyphicon-tower"></i></a></li>
                                    *@
                                </div>
                            </div>
                        }
                        else if (Model.ProfileUserId == User.Identity.GetUserId())
                        {
                            <div class="hidden-sm hidden-md hidden-lg" style="margin-top: 10px; margin-left: auto; margin-right: auto; width: 260px">
                                <div id="upload-header-group-mobile">
                                    @using (Html.BeginForm("changebackgroundimage", "profile", FormMethod.Post, new { @id = "upload-header-form-mobile", enctype = "multipart/form-data" }))
                                    {
                                        @Html.HiddenFor(m => m.ProfileUserId)
                                        <span class="btn btn-default btn-xs btn-file" style="display: inline-block;">
                                            <i id="upload-header-spinner-mobile" class="hidden fa fa-cog fa-spin fa-lg fa-fw"></i>
                                            <i id="upload-header-camera-mobile" class="fa fa-camera fa-lg fa-fw"></i> Change banner
                                            <input id="upload-header-mobile" name="upload-header-mobile" type="file" accept="image/jpeg,image/gif,image/bmp,image/png" />
                                        </span>
                                    }
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row" style="margin-bottom: 10px">
    <div class="col-xs-4">
        <a href="@("https://twitter.com/intent/tweet?text=" + Url.Encode(String.Format("Here's a {0} year old {1} from {2} @twolipsdating", Model.Age, Model.Gender, Model.Location)) + "&url=" + Url.Encode(Url.Action("index", "profile", new { id = Model.ProfileId }, Request.Url.Scheme)))"
           style="width: 100%;" class="btn btn-twitter" title="Share on Twitter">
            <span class="fa-stack">
                <i class="fa fa-circle fa-stack-2x"></i>
                <i class="fa fa-twitter fa-stack-1x fa-inverse-twitter"></i>
            </span>
            <span class="hidden-xs">Share on Twitter</span>
        </a>
    </div>
    <div class="col-xs-4">
        <a href="@("https://www.facebook.com/sharer/sharer.php?u=" + Url.Encode(Url.Action("index", "profile", new { id = Model.ProfileId }, Request.Url.Scheme)))"
           onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"
           style="width: 100%;" class="btn btn-facebook" title="Share on Facebook">
            <span class="fa-stack">
                <i class="fa fa-circle fa-stack-2x"></i>
                <i class="fa fa-facebook fa-stack-1x fa-inverse-facebook"></i>
            </span>
            <span class="hidden-xs">Share on Facebook</span>
        </a>
    </div>
    <div class="col-xs-4">
        <a href="@("https://plus.google.com/share?url=" + Url.Encode(Url.Action("index", "profile", new { id = Model.ProfileId }, Request.Url.Scheme)))"
           onclick="javascript:window.open(this.href, '', 'menubar=no,toolbar=no,resizable=yes,scrollbars=yes,height=600,width=600');return false;"
           style="width: 100%;" class="btn btn-google-plus" title="Share on Google+">
            <span class="fa-stack">
                <i class="fa fa-circle fa-stack-2x"></i>
                <i class="fa fa-google-plus fa-stack-1x fa-inverse-google-plus"></i>
            </span>
            <span class="hidden-xs">Share on Google+</span>
        </a>
    </div>
</div>
<div class="row hidden-md hidden-lg profile-mobile-menu">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div>
                    <ul class="nav nav-pills">
                        <li @(Model.ActiveTab == "about" ? "class=active" : String.Empty)>
                            <a id="m-about" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "about" }), "m-about")" title="About this person">
                                <i class="fa fa-user fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> About</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "feed" ? "class=active" : String.Empty)>
                            <a id="m-feed" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "feed" }), "m-feed")" title="Recent activity">
                                <i class="fa fa-feed fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Feed</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "pictures" ? "class=active" : String.Empty)>
                            <a id="m-pictures" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "pictures" }), "m-pictures")" title="Uploaded pictures">
                                <i class="fa fa-camera fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Pictures</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "reviews" ? "class=active" : String.Empty)>
                            <a id="m-reviews" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "reviews" }), "m-reviews")" title="Reviews from other people">
                                <i class="fa fa-files-o fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Reviews</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "inventory" ? "class=active" : String.Empty)>
                            <a id="m-inventory" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "inventory" }), "m-inventory")" title="Inventory">
                                <i class="fa fa-gift fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Inventory</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "achievements" ? "class=active" : String.Empty)>
                            <a id="m-achievements" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "achievements" }), "m-achievements")" title="Achievements">
                                <i class="fa fa-trophy fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Achievements</span>
                            </a>
                        </li>
                        <li @(Model.ActiveTab == "tags" ? "class=active" : String.Empty)>
                            <a id="m-tags" href="@String.Format("{0}#{1}", Url.Action("index", new { tab = "tags" }), "m-tags")" title="Awarded and suggested tags">
                                <i class="fa fa-tags fa-lg"></i>
                                <span class="hidden-xs hidden-md hidden-lg"> Tags</span>
                            </a>
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-3 col-lg-3">
        @if (!User.Identity.IsAuthenticated)
        {
            <div class="panel panel-warning hidden-md hidden-lg">
                <div class="panel-body text-center">
                    <a class="btn btn-warning" href="@Url.Action("login", "account")">Login to contact this user</a>
                </div>
            </div>
        }
        <div class="panel panel-default hidden-xs hidden-sm">
            <div class="list-group" style="font-size: 16px">
                <a href="@Url.Action("index", new { tab = "about" })" title="About this person" class="list-group-item @(Model.ActiveTab == "about" ? "active" : "overflow-ellipsis")">
                    <i class="fa fa-user fa-lg fa-fw"></i> About
                    @if (Model.ActiveTab == "about")
                    {
                        <span class="pull-right">
                            <i class="fa fa-chevron-right"></i>
                        </span>
                    }
                    else
                    {
                        if (!String.IsNullOrEmpty(Model.SummaryOfSelf))
                        {
                            <small style="margin-left: 10px">@Model.SummaryOfSelf</small>
                        }
                    }
                </a>
                <a href="@Url.Action("index", new { tab = "feed" })" title="Recent activity feed" class="list-group-item @(Model.ActiveTab == "feed" ? "active" : String.Empty)">
                    <i class="fa fa-feed fa-lg fa-fw"></i> Feed
                    <span class="pull-right">
                        @if (Model.ActiveTab == "feed")
                        {
                            <i class="fa fa-chevron-right"></i>
                        }
                    </span>
                </a>
                <a href="@Url.Action("index", new { tab = "pictures" })" title="Uploaded pictures" class="list-group-item @(Model.ActiveTab == "pictures" ? "active" : String.Empty)">
                    <i class="fa fa-camera fa-lg fa-fw"></i> Pictures
                    <span class="pull-right">
                        @if (Model.ActiveTab == "pictures")
                        { <i class="fa fa-chevron-right"></i> }
                        else
                        { <small>@Model.PictureCount <span class="hidden-md">pictures</span></small> }
                    </span>
                </a>
                <a href="@Url.Action("index", new { tab = "tags" })" title="Tags" class="list-group-item @(Model.ActiveTab == "tags" ? "active" : String.Empty)">
                    <i class="fa fa-tags fa-lg fa-fw"></i> Tags
                    <span class="pull-right">
                        @if (Model.ActiveTab == "tags")
                        { <i class="fa fa-chevron-right"></i> }
                        else
                        { <small>@Model.TagCount <span class="hidden-md">tags</span></small> }
                    </span>
                </a>
                <a href="@Url.Action("index", new { tab = "reviews" })" title="Reviews" class="list-group-item @(Model.ActiveTab == "reviews" ? "active" : String.Empty)">
                    <i class="fa fa-files-o fa-lg fa-fw"></i> Reviews
                    <span class="pull-right">
                        @if (Model.ActiveTab == "reviews")
                        { <i class="fa fa-chevron-right"></i> }
                        else
                        { <small>@Model.ReviewCount <span class="hidden-md">reviews</span></small> }
                    </span>
                </a>
                <a href="@Url.Action("index", new { tab = "inventory" })" title="Inventory" class="list-group-item @(Model.ActiveTab == "inventory" ? "active" : String.Empty)">
                    <i class="fa fa-gift fa-lg fa-fw"></i> Inventory
                    <span class="pull-right">
                        @if (Model.ActiveTab == "inventory")
                        { <i class="fa fa-chevron-right"></i> }
                        else
                        { <small>@Model.InventoryCount <span class="hidden-md">items</span></small> }
                    </span>
                </a>
                <a href="@Url.Action("index", new { tab = "achievements" })" title="Achievements" class="list-group-item @(Model.ActiveTab == "achievements" ? "active" : String.Empty)">
                    <i class="fa fa-trophy fa-lg fa-fw"></i> Achievements
                    <span class="pull-right">
                        @if (Model.ActiveTab == "achievements")
                        { <i class="fa fa-chevron-right"></i> }
                        else
                        { <small>@Model.CompletedAchievementCount / @Model.PossibleAchievementCount <span class="hidden-md">complete</span></small> }
                    </span>
                </a>
            </div>
        </div>
        @*<div class="panel panel-default">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        <i class="fa fa-users fa-lg"></i> Similar people
                    </h4>
                </div>
                <div class="panel-body similar-people">
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                    @Html.Partial("_ProfileImagePartial", Model.ProfileThumbnailImagePath)
                </div>
            </div>*@
    </div>
    <div class="col-md-9 col-lg-9">
        @if (User.Identity.IsAuthenticated)
        {

        }
        else
        {
            <div class="panel panel-warning hidden-xs hidden-sm">
                <div class="panel-body text-center">
                    <a class="btn btn-warning" href="@Url.Action("login", "account")">Login to contact this user</a>
                </div>
            </div>
        }
        @if (Model.ActiveTab == "about")
        {
            Html.RenderPartial("_AboutPartial");
        }
        else if (Model.ActiveTab == "feed")
        {
            Html.RenderPartial("_FeedPartial", Model.Feed);
        }
        else if (Model.ActiveTab == "pictures")
        {
            Html.RenderPartial("_PicturesPartial", Model.UploadImage);
        }
        else if (Model.ActiveTab == "reviews")
        {
            Html.RenderPartial("_ReviewsPartial", Model.Reviews);
        }
        else if (Model.ActiveTab == "inventory")
        {
            Html.RenderPartial("_InventoryPartial", Model.Inventory);
        }
        else if (Model.ActiveTab == "achievements")
        {
            Html.RenderPartial("_AchievementsPartial", Model.Achievements);
        }
        else if (Model.ActiveTab == "tags")
        {
            Html.RenderPartial("_TagsPartial", Model);
        }
        @if (String.IsNullOrEmpty(Model.ActiveTab) || Model.ActiveTab == "feed")
        {
            if (Model.Feed.Items.PageCount > 1)
            {
                <div class="panel panel-default">
                    <div class="panel-body">
                        @Html.PagedListPager(Model.Feed.Items, page => Url.Action("index", new { tab = Model.ActiveTab, page = page }))
                    </div>
                </div>
            }
        }
    </div>
</div>
@if (!HttpContext.Current.IsDebuggingEnabled)
{
    <div class="ad">
        <!-- Profile - Footer - 1 -->
        <ins class="adsbygoogle"
             style="display:block"
             data-ad-client="ca-pub-1823005717277864"
             data-ad-slot="7642643435"
             data-ad-format="auto"></ins>
        <script>
            (adsbygoogle = window.adsbygoogle || []).push({});
        </script>
    </div>
}
else
{
    <div style="width: 610px; margin: 5px auto;">
        <img src="http://placehold.it/600x90" />
    </div>
}
@section Modals {
    @if (Model.ActiveTab == "about")
    {
        <div class="modal" id="modalWhatImLookingFor" tabindex="-1" role="dialog" aria-labelledby="modalWhatImLookingForLabel" aria-hidden="true">
            <div class="modal-dialog">
                @using (Html.BeginForm("saveLookingFor", "profile", FormMethod.Post))
                {
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="modalWhatImLookingForLabel">Update what you're looking for</h4>
                        </div>
                        <div class="modal-body">
                            @Html.HiddenFor(m => m.ActiveTab)
                            @Html.HiddenFor(m => m.ProfileId)
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-xs-12 col-md-8 col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LookingForTypeId, new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.LookingForTypeId,
                                new SelectList(Model.LookingForTypes, "Key", "Value"),
                                String.Empty,
                                new { @class = "form-control", data_placeholder = "Select a relationship type" })
                                        </div>
                                        <div class="form-group">
                                            <label class="control-label">Ages</label>
                                            <div class="clearfix"></div>
                                            <div class="col-xs-3">
                                                @Html.TextBoxFor(m => m.LookingForAgeMin, new { id = "looking-for-age-min", @class = "form-control", maxlength = "2" })
                                            </div>
                                            <div class="col-xs-1 text-center">
                                                <span style="display: block; margin-top: 8px;">to</span>
                                            </div>
                                            <div class="col-xs-3">
                                                @Html.TextBoxFor(m => m.LookingForAgeMax, new { id = "looking-for-age-max", @class = "form-control", maxlength = "2" })
                                            </div>
                                            <div class="clearfix"></div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.LookingForLocationId, new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.LookingForLocationId,
                                new SelectList(Model.LookingForLocations, "Key", "Value"),
                                String.Empty,
                                new { @class = "form-control", data_placeholder = "Select an area range" })
                                        </div>
                                        <div id="looking-for-error" class="hidden alert alert-danger" role="alert">
                                            <p id="looking-for-error-text">Something happened which prevented your information from being submitted.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="button-looking-for-close" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button id="button-looking-for-submit" type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }
            </div>
        </div>
        <div class="modal" id="modalMyDetails" tabindex="-1" role="dialog" aria-labelledby="modalMyDetailsLabel" aria-hidden="true">
            <div class="modal-dialog">
                @using (Html.BeginForm("saveMyDetails", "profile", FormMethod.Post))
                {
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                            <h4 class="modal-title" id="modalMyDetailsLabel">Update your details</h4>
                        </div>
                        <div class="modal-body">
                            @Html.HiddenFor(m => m.ActiveTab)
                            @Html.HiddenFor(m => m.ProfileId)
                            <div class="container-fluid">
                                <div class="row">
                                    <div class="col-xs-12 col-md-8 col-md-offset-2">
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.RelationshipStatusId, new { @class = "control-label" })
                                            @Html.DropDownListFor(m => m.RelationshipStatusId,
                                            new SelectList(Model.RelationshipStatuses, "Key", "Value"),
                                            String.Empty,
                                            new { @class = "form-control", data_placeholder = "Select your current relationship status" })
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(m => m.SelectedLanguages, new { @class = "control-label" })
                                            @Html.ListBoxFor(m => m.SelectedLanguages,
                                            new SelectList(Model.AllLanguages, "Key", "Value"),
                                            new { @class = "form-control", multiple = "multiple", data_placeholder = "Select your used languages" })
                                        </div>
                                        <div id="my-details-error" class="hidden alert alert-danger" role="alert">
                                            <p id="my-details-error-text">Something happened which prevented your information from being submitted.</p>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button id="button-my-details-close" type="button" class="btn btn-default" data-dismiss="modal">Cancel</button>
                            <button id="button-my-details-submit" type="submit" class="btn btn-primary">Save</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    }
    @if (Model.WriteReviewViolation != null && Model.WriteReviewViolation.ViolationTypes != null && Model.WriteReviewViolation.ViolationTypes.Count > 0)
    {
        <div class="modal fade" id="modalReviewViolation" tabindex="-1" role="dialog" aria-labelledby="modalReviewViolationLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="modalReviewLabel">Submit violation for review</h4>
                    </div>
                    <div class="modal-body">
                        <div id="violation-review-body">
                            <div class="form-group">
                                <label for="review-author-name" class="control-label">Review Author:</label>
                                <p id="review-author-name"></p>
                                <input type="hidden" id="review-id" />
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.WriteReviewViolation.ViolationTypeId, new { @class = "control-label" })
                                @Html.DropDownListFor(m => m.WriteReviewViolation.ViolationTypeId,
                        new SelectList(Model.WriteReviewViolation.ViolationTypes, "Key", "Value"),
                        new { @class = "form-control", data_placeholder = "What's the problem?" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "control-label" })
                                @Html.TextAreaFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "form-control" })
                            </div>
                        </div>
                        <div id="violation-error" class="alert alert-danger" role="alert">
                            <p id="violation-error-text">Something happened which prevented your violation from being submitted.</p>
                        </div>
                        <div id="violation-success" class="alert alert-success" role="alert">
                            <p>Thanks for the report! You can close this popup now.</p>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button id="button-violation-close" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                        <button id="button-violation-submit" onclick="onAddReviewViolation(event, this)" type="button" class="btn btn-primary">Submit</button>
                    </div>
                </div>
            </div>
        </div>
    }
    <div class="modal fade" id="modalGift" tabindex="-1" role="dialog" aria-labelledby="modalGiftLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalReviewLabel">Send gifts to <strong>@Model.UserName</strong></h4>
                </div>
                @if (Model.ViewerInventoryItems != null && Model.ViewerInventoryItems.Count > 0)
                {
                    <div class="modal-body">
                        <div class="form-group">
                            <div class="row">
                                @foreach (var item in Model.ViewerInventoryItems)
                                {
                                    <div id="@String.Format("gift-image-wrapper-{0}", item.GiftId)" class="col-xs-3 col-md-2 text-center">
                                        <a id="@item.InventoryItemId" data-gift-name="@item.GiftName" data-gift-id="@item.GiftId" href="#" onclick="onSelectGiftClick(event, this)">
                                            <img src="@item.GiftIconFilePath">
                                        </a>
                                        <p id="@String.Format("gift-count-{0}", item.InventoryItemId)" class="bg-info">@item.ItemCount</p>
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="pull-right">
                            <button type="button" class="btn btn-default" data-dismiss="modal">
                                <i class="fa fa-close"></i> Close
                            </button>
                            <button id="button-gift-send" type="button" class="btn btn-primary" onclick="onSendGift(event, this)">
                                <i class="fa fa-send"></i> Send
                            </button>
                        </div>
                        <div class="clearfix"></div>
                        <br />
                        <div id="gift-error" class="alert alert-danger" role="alert">
                            <p id="gift-error-text">Something happened which prevented your gift from being sent.</p>
                        </div>
                        <div id="gift-success" class="alert alert-success" role="alert">
                            <p>Gift sent successfully.</p>
                        </div>
                        <table id="gift-send-log" class="table">
                            <thead>
                                <tr>
                                    <th>Gifts successfully sent so far:</th>
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                        @Html.HiddenFor(m => m.SendGift.GiftId)
                        @Html.HiddenFor(m => m.SendGift.InventoryItemId)
                        <input type="hidden" id="selected-gift-name" />
                    </div>
                }
                else
                {
                    <div class="modal-body">
                        <p>You don't have any items to send. Go get some and come back!</p>
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalReview" tabindex="-1" role="dialog" aria-labelledby="modalReviewLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalReviewLabel">New review for <strong>@Model.UserName</strong></h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        <small>Click to select a rating:</small>
                        <div id="star" style="display: inline-block"></div>
                    </div>
                    <div class="form-group">
                        <small>Your review:</small>
                        @Html.TextAreaFor(m => m.WriteReview.ReviewContent, new { @class = "form-control", rows = 5 })
                    </div>
                    <div id="review-error" class="alert alert-danger" role="alert">
                        <p id="review-error-text">Something happened which prevented your review from being submitted.</p>
                    </div>
                    <div id="review-success" class="alert alert-success" role="alert">
                        <p>Review submitted successfully. @Html.ActionLink("View reviews", "index", "profile", new { id = Model.ProfileId, tab = "reviews" }, new { @class = "alert-link" }) for <strong>@Model.UserName</strong>.</p>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        <i class="fa fa-close"></i> Close
                    </button>
                    <button id="button-review-write" type="button" class="btn btn-primary" onclick="onWriteReview(event, this)">
                        <i class="fa fa-send"></i> Send
                    </button>
                </div>
                @Html.HiddenFor(m => m.WriteReview.RatingValue)
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalMessage" tabindex="-1" role="dialog" aria-labelledby="modalMessageLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="modalMessageLabel">Send messages to <strong>@Model.UserName</strong></h4>
                </div>
                <div class="modal-body">
                    <div class="form-group">
                        @Html.TextAreaFor(m => m.SendMessage.MessageBody, new { @class = "form-control", rows = 5 })
                    </div>
                    <div id="message-error" class="alert alert-danger" role="alert">
                        <p id="message-error-text">Something happened which prevented your message from being sent.</p>
                    </div>
                    <div class="pull-right">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            <i class="fa fa-close"></i> Close
                        </button>
                        <button id="button-message-send" type="button" onclick="onSendMessage(event, this)" class="btn btn-primary">
                            <i class="fa fa-send"></i> Send
                        </button>
                    </div>
                    <div class="clearfix"></div>
                    <br />
                    <div id="message-success" class="alert alert-success" role="alert">
                        <p>Message sent successfully. @Html.ActionLink("View conversation", "conversation", "message", new { id = @Model.ProfileUserId }, new { @class = "alert-link" }) with <strong>@Model.UserName</strong>.</p>
                    </div>
                    <table id="message-send-log" class="table wrap-long-lines-table">
                        <thead>
                            <tr>
                                <th>Messages successfully sent so far:</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    @if (Model.ActiveTab == "pictures" || User.Identity.GetUserId() == Model.ProfileUserId)
    {
        <div class="modal fade" id="modalProfileImage" tabindex="-1" role="dialog" aria-labelledby="modalProfileImageLabel" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="modalProfileImageLabel">Select your profile image</h4>
                    </div>
                    @if (Model.UploadImage.UserImages.Count > 0)
                    {
                        using (Html.BeginForm("changeimage", "profile", FormMethod.Post))
                        {
                            @Html.AntiForgeryToken()
                            <div class="modal-body">
                                <div class="row">
                                    @foreach (var userImage in Model.UploadImage.UserImages)
                                    {
                                        <div class="col-xs-4 col-sm-3 text-center">
                                            <a id="@userImage.Id" class="thumbnail" href="#" onclick="onSelectProfileImageClick(event, this)">
                                                <img src="@userImage.ThumbnailPath" />
                                            </a>
                                        </div>
                                    }
                                </div>
                            </div>
                            @Html.HiddenFor(m => m.ChangeImage.UserImageId)
                            @Html.HiddenFor(m => m.ProfileUserId)
                            @Html.HiddenFor(m => m.ProfileId)
                            <div class="modal-footer">
                                <button type="button" class="btn btn-default" data-dismiss="modal">
                                    <i class="fa fa-close fa-lg"></i> Close
                                </button>
                                <button type="submit" class="btn btn-primary">
                                    <i class="fa fa-check fa-lg"></i> OK
                                </button>
                            </div>
                        }
                    }
                    else
                    {
                        <div class="modal-body">
                            <h4>You can't change your profile image because you haven't uploaded any images.</h4>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                            <button type="submit" class="btn btn-primary">OK</button>
                        </div>
                    }
                </div>
            </div>
        </div>
    }
    @if (Model.ActiveTab == "tags")
    {
        <div class="modal fade" id="modalSuggestTags" tabindex="-1" role="dialog" aria-labelledby="modalSuggestTagsLabel" aria-hidden="true">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                        <h4 class="modal-title" id="modalSuggestTagsLabel"><i class="fa fa-tags"></i> Add &amp; Remove Tags</h4>
                    </div>
                    <div class="modal-body">
                        <div class="row">
                            <div class="tags">
                                @foreach (var tag in Model.AllTags)
                                {
                                    <div class="col-sm-4 overflow-ellipsis">
                                        <div style="display: inline-block">
                                            @if (tag.DidUserSuggest)
                                            {
                                                <a href="#" id="@String.Format("{0}-tag-button", tag.TagId)" onclick="onSuggestTag(event, this, @tag.TagId)" class="custom-tooltip btn btn-primary btn-xs" title="@tag.TagDescription">
                                                    <span id="@String.Format("{0}-tag-count", tag.TagId)" class="badge">@tag.TagCount</span> @tag.TagName
                                                </a>
                                                <a href="#" onclick="onSuggestTag(event, this, @tag.TagId)"><i id="@String.Format("{0}-tag-glyph", tag.TagId)" class="glyphicon glyphicon-minus"></i></a>
                                            }
                                            else
                                            {
                                                <a href="#" id="@String.Format("{0}-tag-button", tag.TagId)" onclick="onSuggestTag(event, this, @tag.TagId)" class="custom-tooltip btn btn-default btn-xs" title="@tag.TagDescription">
                                                    <span id="@String.Format("{0}-tag-count", tag.TagId)" class="badge">@tag.TagCount</span> @tag.TagName
                                                </a>
                                                <a href="#" onclick="onSuggestTag(event, this, @tag.TagId)"><i id="@String.Format("{0}-tag-glyph", tag.TagId)" class="glyphicon glyphicon-plus"></i></a>
                                            }
                                        </div>
                                        <span class="hidden-sm hidden-md hidden-lg" style="color: #999" title="@tag.TagDescription"><small>@tag.TagDescription</small></span>
                                        <input id="@String.Format("{0}-tag-hidden", tag.TagId)" type="hidden" value="@tag.DidUserSuggest.ToString().ToLower()" />
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            <i class="fa fa-close"></i>
                            Close
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
    <!-- The Bootstrap Image Gallery lightbox, should be a child element of the document body -->
    <div id="blueimp-gallery" class="blueimp-gallery">
        <!-- The container for the modal slides -->
        <div class="slides"></div>
        <!-- Controls for the borderless lightbox -->
        <h3 class="title"></h3>
        <a class="prev">‹</a>
        <a class="next">›</a>
        <a class="close">×</a>
        <a class="play-pause"></a>
        <ol class="indicator"></ol>
        <!-- The modal dialog, which will be used to wrap the lightbox content -->
        <div class="modal fade">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" aria-hidden="true">&times;</button>
                        <h4 class="modal-title"></h4>
                    </div>
                    <div class="modal-body next"></div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default pull-left prev">
                            <i class="glyphicon glyphicon-chevron-left"></i>
                            Previous
                        </button>
                        <button type="button" class="btn btn-primary next">
                            Next
                            <i class="glyphicon glyphicon-chevron-right"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@section Scripts {
    <script src="//blueimp.github.io/Gallery/js/jquery.blueimp-gallery.min.js"></script>
    @Scripts.Render("~/bundles/profile/index")

    @if (!HttpContext.Current.IsDebuggingEnabled)
    {
        <script async src="//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js"></script>
    }
}
@section Styles {
    @Styles.Render("~/Content/bootstrap-image-gallery")
    @Styles.Render("~/Content/chosen")
}