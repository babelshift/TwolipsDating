@model TwolipsDating.ViewModels.DashboardViewModel

@{
    ViewBag.Title = "twolips - your dashboard";
}

<div class="modal fade" id="modalReviewViolation" tabindex="-1" role="dialog" aria-labelledby="modalReviewViolationLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="modalReviewLabel">Submit violation for review</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="review-author-name" class="control-label">Review Author:</label>
                    <p id="review-author-name"></p>
                    <input type="hidden" id="review-id" />
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.WriteReviewViolation.ViolationTypeId, new { @class = "control-label" })
                    @Html.DropDownListFor(m => m.WriteReviewViolation.ViolationTypeId,
                        new SelectList(Model.WriteReviewViolation.ViolationTypes, "Key", "Value"),
                        new { @class = "form-control", data_placeholder = "What's the problem?" })
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "control-label" })
                    @Html.TextAreaFor(m => m.WriteReviewViolation.ViolationContent, new { @class = "form-control" })
                </div>
                @Html.HiddenFor(m => m.CurrentUserId)
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button onclick="onAddReviewViolation(event, this)" type="button" data-dismiss="modal" class="btn btn-primary">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-body">
        @Html.Partial("_DropDownMenuPartial", new TwolipsDating.ViewModels.DropDownMenuViewModel() { ActiveMenuText = "Dashboard" })
    </div>
</div>

<div class="row">
    <div class="col-md-8 col-md-offset-2">
        <div class="panel panel-default">
            <div class="panel-body">
                @if (Model.IsCurrentUserEmailConfirmed)
                {
                    for (int i = 0; i < Model.Items.Count; i++)
                    {
                        var feedItem = Model.Items[i];

                        if (feedItem.ItemType == TwolipsDating.ViewModels.DashboardFeedItemType.Message)
                        {
                            Html.RenderPartial("_FeedItemMessagesPartial", feedItem.MessageFeedItem);
                        }
                        else if (feedItem.ItemType == TwolipsDating.ViewModels.DashboardFeedItemType.UploadedPictures)
                        {
                            Html.RenderPartial("_FeedItemUploadedPicturesPartial", feedItem.UploadedImageFeedItem);
                        }
                        else if (feedItem.ItemType == TwolipsDating.ViewModels.DashboardFeedItemType.ReviewWritten)
                        {
                            Html.RenderPartial("_FeedItemReviewWrittenPartial", feedItem.ReviewWrittenFeedItem);
                        }

                        if (i < Model.Items.Count - 1)
                        {
                            <hr />
                        }
                    }
                }
                else
                {
                    <h4>Before you can view your dashboard, you must confirm your email address.</h4>
                }

                @*
                    <p>
                        <a href="#">jskiles1</a> completed the challenge <a href="#" class="label label-primary">Bring Out Your Dead</a>
                        <br />
                        <small>3 minutes ago</small>
                    </p>
                    <p>
                        <a href="#">jskiles1</a> defeated <a href="#">joanne123</a> in a game of <a href="#" class="label label-primary">Chicken</a>
                        <br />
                        <small>5 hours ago</small>
                    </p>
                    <p>
                        <a href="#">jskiles1</a> made an announcement: <strong>all I do is win!</strong>
                        <br />
                        <small>7 hours ago</small>
                    </p>
                *@
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">
        function onAddReviewViolation(e, obj) {
            var reviewId = $('#review-id').val();
            var violationTypeId = $('#WriteReviewViolation_ViolationTypeId').val();
            var authorUserId = $('#CurrentUserId').val();
            var content = $('#WriteReviewViolation_ViolationContent').val();

            json = "{\"reviewId\":" + reviewId + ", \"violationTypeId\":" + violationTypeId + ", \"authorUserId\":\"" + authorUserId + "\", \"content\":\"" + content + "\"}";

            $.ajax({
                type: 'POST',
                url: '@Url.Action("addReviewViolation", "violation")',
                data: json,
                contentType: 'application/json; charset=utf-8',
                success: function (data) {
                    if (data.success) {
                        // show success box somewhere (next to report button?)
                    } else {
                        // show error box somewhere (next to report button?)
                    }
                }
            });
        }

        $(document).ready(function () {
            $('#modalReviewViolation').on('show.bs.modal', function (event) {
                var button = $(event.relatedTarget); // Button that triggered the modal
                var recipient = button.data('review-author'); // Extract info from data-* attributes
                var reviewId = button.data('review-id');
                var modal = $(this);
                modal.find('#review-author-name').text(recipient)
                modal.find('#review-id').val(reviewId)
            });

            // loop through all share review links and turn them into valid popovers with share buttons
            $("a[id^='share-profile-link']").popover({
                content: function () {
                    var match = $(this).attr('id').match(new RegExp(/[0-9 -()+]+$/)); // extract the review ID
                    var shareButtonsDiv = "#share-profile-buttons-popover-" + match[0];
                    var clone = $(shareButtonsDiv).clone(true);
                    var cloneUnhide = clone.removeClass('hide');
                    return cloneUnhide.html();
                    //return $(shareButtonsDiv).html();
                }
            });
            $("a[id^='share-profile-link']").click(function (e) {
                e.preventDefault(); // prevents the page from jumping to the top on click
            });
        });
    </script>
}